/*当前文件用来配置所有子工程公用的配置*/

println("我是根目录下的build.gradle")
apply from: "gradle_script/checkVersions.gradle"
apply from: "gradle_script/config.gradle"

buildscript {

    repositories {
        google()
        mavenCentral()
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        maven {
            url 'https://maven.aliyun.com/nexus/content/repositories/releases/'
        }
        maven {
            url "https://artifact.bytedance.com/repository/byteX/"
        }
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20'
        /*依赖版本管理 执行./gradlew dependencyUpdates 获取是否有新版本*/
        classpath "com.github.ben-manes:gradle-versions-plugin:0.44.0"

        /*the router*/
        classpath 'cn.therouter:plugin:1.1.1'


//        def bytex_plugin_version = "0.3.0"
//        /*byteX 基础*/
//        classpath "com.bytedance.android.byteX:base-plugin:${bytex_plugin_version}"
//        /*方法内联*/
//        classpath "com.bytedance.android.byteX:access-inline-plugin:${bytex_plugin_version}"
//        /*常量内联*/
//        classpath "com.bytedance.android.byteX:const-inline-plugin:${bytex_plugin_version}"
//        /*资源优化*/
//        classpath "com.bytedance.android.byteX:shrink-r-plugin:${bytex_plugin_version}"
//        /*方法移除*/
//        classpath "com.bytedance.android.byteX:method-call-opt-plugin:${bytex_plugin_version}"
    }


}


allprojects {
    group "https://github.com/yuzhiqiang1993"
    repositories {
        google()
        mavenCentral()
        maven {
            url 'https://maven.aliyun.com/nexus/content/repositories/releases/'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        maven {
            url "https://jitpack.io"
            credentials { username authToken }
        }


    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * 检测不支持Jetifier的库
 * 通过运行./gradlew checkJetifierAll就可以打印出所有module的Jetifier使用情况
 */
task checkJetifierAll(group: "verification") {}

subprojects { project ->
    project.tasks.whenTaskAdded { task ->
        if (task.name == "checkJetifier") {
            checkJetifierAll.dependsOn(task)
        }
    }
}

