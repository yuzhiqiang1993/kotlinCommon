apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'


kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdk compile_sdk_version

    defaultConfig {
        minSdk min_sdk_version
        targetSdk target_sdk_version
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

    }


    buildFeatures {
        dataBinding true
        viewBinding true
    }
    lint {
        abortOnError false
    }
    namespace 'com.yzq.lib_base'


}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    api "androidx.appcompat:appcompat:$appcompat"
    api "com.google.android.material:material:$material"
    api "androidx.vectordrawable:vectordrawable:$vectordrawable"
    api "androidx.constraintlayout:constraintlayout:$constraintlayout"

    api "androidx.annotation:annotation:$annotation"
    api "androidx.multidex:multidex:$multiDexVersion"

    //KTX core
    api "androidx.core:core-ktx:$core_ktx"

    //ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ktx"
    //LiveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ktx"
    //Lifecycles only (without ViewModel or LiveData)
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx"
    /*collection*/
    api "androidx.collection:collection-ktx:$collection_ktx"


    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines"


    /*下拉刷新*/
    api "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout"

    /*utils*/
    api "com.blankj:utilcodex:$utilcode"
    /*代替sp*/
    api "com.tencent:mmkv:${mmkv}"

    api('com.squareup.moshi:moshi-kotlin:1.14.0')

    /*ARouter*/
    api "com.alibaba:arouter-api:$arouter_api"
    kapt "com.alibaba:arouter-compiler:$arouter_compiler"


    /*retrofit*/
    api "com.squareup.okhttp3:okhttp:$ok_http"
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.okhttp3:logging-interceptor:$ok_http"
    api "com.squareup.retrofit2:converter-moshi:$retrofit"

    /*progressmanager*/
    api "com.github.JessYanCoding:ProgressManager:$progressmanager_version"

    api 'com.github.aiceking:AppStartFaster:2.1.0'

    api project(path: ':lib_application')
    api project(path: ':lib_network_status')
    api project(path: ':lib_base_adapter')
    api project(path: ':lib_eventbus')
    api project(path: ':lib_img')
    api project(path: ':lib_materialdialog')
    api project(path: ':lib_permission')
    api project(path: ':lib_resource')
    api project(path: ':lib_widget')
    api project(path: ':lib_aliemas')


}

