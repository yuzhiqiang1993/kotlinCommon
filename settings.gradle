/*用来声明当前工程都包含哪些子工程*/


/**
 *
 * gradle 中两个重要的概念
 * 1.project:表示一个项目，例如app module,其他子module。
 * 2.task:表示一个具体要执行的任务 例如：assembleRelease
 *
 *
 * gradle 生命周期（三个阶段）
 * 1. 初始化阶段（settingsEvaluated）  执行的就是setting.gradle中的代码，主要是看include了哪些模块，生成任务依赖图
 * 2. 配置阶段（projectsLoaded，projectsEvaluated）    执行的各个模块中的build.gradle中的代码
 * 3. 构建阶段（buildFinished）    把配置阶段中生成好的任务依赖图执行，主要是执行task
 */


/**
 * settings.gradle 运行在初始化阶段
 */

include ':app',
        ':common',
        ':gao_de_map',
        ':lib_base',
        ':lib_img',
        ':lib_resource',
        ':lib_eventbus',
        ':lib_materialdialog',
        ':lib_widget',
        ':lib_permission',
        ':lib_base_adapter'


/*settings.gradle里的代码会在初始化回调之前执行*/
println("我是settings.gradle")


println "rootProjectName:${rootProject.getName()}"


/*gradle的生命周期回调*/
gradle.addBuildListener(new BuildAdapter() {
    @Override
    void settingsEvaluated(Settings settings) {
        super.settingsEvaluated(settings)
        println("初始化阶段完成")
    }

    @Override
    void projectsEvaluated(Gradle gradle) {
        super.projectsEvaluated(gradle)
        println("配置阶段完成")


        rootProject.children.forEach(it -> {
            println "子工程名称是：${it.name},；路径是：${it.getProjectDir()}"
        })
    }

    @Override
    void buildFinished(BuildResult result) {
        super.buildFinished(result)
        println("构建阶段完成")
    }
})
include ':lib_aliemas'
