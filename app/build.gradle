apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'walle'
apply plugin: 'AndResGuard'

android {
    compileSdkVersion compile_sdk_version
    defaultConfig {
        applicationId "com.yzq.kotlincommon"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode version_code
        versionName version_name
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {

        debug {}
        release {
            storePassword rootProject.ext.signConfigs.storePwd
            keyAlias rootProject.ext.signConfigs.keyAlias
            keyPassword rootProject.ext.signConfigs.keypwd
            storeFile file(rootProject.ext.signConfigs.storeFilePath)
        }
    }

    buildTypes {


        debug {

//            minifyEnabled true
//            zipAlignEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt "com.google.dagger:dagger-compiler:$dagger2"
    kapt "com.alibaba:arouter-compiler:$arouter_compiler"


    implementation project(':common')
    implementation 'com.github.yuzhiqiang1993:zxing:2.2.8'
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation project(':custom_view')
    implementation project(':gao_de_map')
}


walle {
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    apkFileNameFormat = '${projectName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk'
    channelFile = new File("${project.getProjectDir()}/channel")
}


andResGuard {
    // mappingFile = file("./resource_mapping.txt")
    mappingFile = null
    use7zip = true
    useSign = true
    // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
    keepRoot = false
    whiteList = [
            // for your icon
            "R.drawable.icon",
            // for fabric
            "R.string.com.crashlytics.*",
            // for google-services
            "R.string.google_app_id",
            "R.string.gcm_defaultSenderId",
            "R.string.default_web_client_id",
            "R.string.ga_trackingId",
            "R.string.firebase_database_url",
            "R.string.google_api_key",
            "R.string.google_crash_reporting_api_key"
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
    ]
    sevenzip {
        artifact = "com.tencent.mm:SevenZip:$andResGuardVersion"
    }
}



afterEvaluate {
    tasks.getByName('assembleReleaseChannels') {
        dependsOn(resguardRelease)
    }
}
