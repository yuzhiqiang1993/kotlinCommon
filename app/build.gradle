import com.yzq.dependency_manager_plugin.*

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
//    id 'com.aliyun.ams.emas-services'
    id 'com.yzq.dependency-manager'
}
println "getRootDir():${getRootDir()}"

//apply from: file("${getRootDir()}/gradle_script/bytex.gradle")

android {

    compileSdk AndroidConfig.compileSdkVersion
    defaultConfig {
        applicationId "com.yzq.kotlincommon"
        minSdk AndroidConfig.minSdkVersion
        targetSdk AndroidConfig.targetSdkVersion
        versionCode AndroidConfig.versionCode
        versionName AndroidConfig.versionName
        multiDexEnabled AndroidConfig.multiDexEnabled
        vectorDrawables.useSupportLibrary = true
        resConfigs 'zh'
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"
        }
    }

    signingConfigs {

        release {
            storePassword rootProject.ext.signConfigs.storePwd
            keyAlias rootProject.ext.signConfigs.keyAlias
            keyPassword rootProject.ext.signConfigs.keypwd
            storeFile file(rootProject.ext.signConfigs.storeFilePath)
            v2SigningEnabled true
        }
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            /*给buildConfig中添加变量*/
            buildConfigField("boolean", "LOG_DEBUG", "false")
            buildConfigField("String", "BASE_URL", "\"https://debug.xxx.xxx/\"")//字符串的值直接写的话需要加转义符
            buildConfigField("String", "CUSTOME_FIELD", "\"${debugValue}\"")
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "LOG_DEBUG", "true")
            buildConfigField("String", "BASE_URL", "\"https://release.xxx.xxx/\"")//字符串的值直接写的话需要加转义符
            buildConfigField("String", "CUSTOME_FIELD", "\"${rootProject.ext.releaseValue}\"")
        }
    }

    flavorDimensions "channel", "env"
    productFlavors {


        dev {
            dimension "env"
            manifestPlaceholders = [
                    "APP_NAME"          : "KotlinCommon-dev",
                    "META_CHANNEL_VALUE": "app"
            ]
        }
        prd {
            dimension "env"
            manifestPlaceholders = [
                    "APP_NAME"          : "KotlinCommon",
                    "META_CHANNEL_VALUE": "app"
            ]
        }

        wandoujia {
            dimension "channel"
            manifestPlaceholders = [
                    "APP_NAME"          : "KotlinCommon-wandoujia",
                    "META_CHANNEL_VALUE": "wandoujia"
            ]
        }
        yingyongbao {
            dimension "channel"
            manifestPlaceholders = [
                    "APP_NAME"          : "KotlinCommon-yingyongbao",
                    "META_CHANNEL_VALUE": "yingyongbao"
            ]
        }

    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    compileOptions {
        sourceCompatibility(JavaVersion.VERSION_11)
        targetCompatibility(JavaVersion.VERSION_11)
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    /*不加打包的时候有报错提示  但不影响*/
    lint {
        baseline = file("lint-baseline.xml")
    }

    namespace 'com.yzq.kotlincommon'


}


kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation(Kotlinx.kotlinStdlibJdk8)
    implementation AndroidOfficial.viewpager2
    implementation(AndroidOfficial.coordinatorlayout)
    implementation(AndroidOfficial.splashscreen)

    kapt ARouter.arouterCompiler
    kapt AndroidOfficial.roomCompiler

    implementation ThirdParty.zxingYzq
    implementation ThirdParty.jsoup

    implementation ThirdParty.bannerViewPager

    implementation ThirdParty.xeonBsDiff

    implementation(AndroidOfficial.recyclerview)


    implementation project(':gao-de-map')

    implementation project(':common')
}


task testTask() {


    doFirst {
        println "testTask执行 doFirst"
    }

    doLast {
        println "testTask执行 doLast"
    }

}

/*自定义一个task*/
task testTask1() {
    dependsOn testTask
    doLast {
        println("testTask1执行")
    }
}

/*project表示当前module的项目*/
println "我是App工程，${project.name},我的路径是:${project.projectDir}"


